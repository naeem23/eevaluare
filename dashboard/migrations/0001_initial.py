# Generated by Django 3.2.6 on 2021-10-05 08:31

import dashboard.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto', models.CharField(blank=True, max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=155, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.area')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluareForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_no', models.CharField(blank=True, default=dashboard.models.reference_no_generate, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('locatie', models.CharField(blank=True, choices=[('urbana', 'Urbana'), ('rurala', 'Rurala'), ('centrala', 'Centrala'), ('mediana', 'Mediana'), ('periferica', 'Periferica')], max_length=55, null=True)),
                ('apartment_no', models.CharField(blank=True, max_length=55, null=True)),
                ('apartment_type', models.CharField(blank=True, choices=[('decomandat', 'Decomandat'), ('semidecomandat', 'Semidecomandat'), ('nedecomandat', 'Neecomandat'), ('circular', 'Circular')], max_length=155, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('property_type', models.CharField(blank=True, choices=[('apartamente', 'Apartamente'), ('case', 'Case / Vile'), ('comerciale', 'Spatii Comerciale'), ('depozite', 'Depozite si Hale'), ('birouri', 'Birouri')], max_length=150, null=True)),
                ('owner', models.CharField(blank=True, max_length=150, null=True)),
                ('nume_client', models.CharField(blank=True, max_length=255, null=True)),
                ('ct_address', models.CharField(blank=True, max_length=155, null=True)),
                ('cui', models.CharField(blank=True, max_length=50, null=True)),
                ('report_recipient', models.CharField(blank=True, max_length=255, null=True)),
                ('rp_address', models.CharField(blank=True, max_length=155, null=True)),
                ('telephone1', models.CharField(blank=True, max_length=15, null=True)),
                ('telephone2', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(blank=True, choices=[('progress', 'In progress'), ('completed', 'Completed'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], max_length=150, null=True)),
                ('inspection_date', models.DateField(blank=True, null=True)),
                ('valuation_date', models.DateField(blank=True, null=True)),
                ('report_date', models.DateField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.city')),
                ('valuatate_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialAttr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('property_type', models.CharField(blank=True, max_length=50, null=True)),
                ('has_photo', models.BooleanField(default=False)),
                ('has_nr', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ValuationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(blank=True, choices=[('bank_guarantee', 'Garantare Bancara')], max_length=150, null=True)),
                ('approach', models.CharField(blank=True, choices=[('market', 'Abordare de piață'), ('income', 'Abordarea prin venit')], max_length=150, null=True)),
                ('amav', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('aiav', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fer', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fer_date', models.DateField(blank=True, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='Suprafete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(blank=True, max_length=155, null=True)),
                ('area', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('utila', models.BooleanField(default=False)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='SourceofInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialAttrValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_value', models.CharField(blank=True, max_length=10, null=True)),
                ('mav', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('iav', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('floor_type', models.CharField(blank=True, choices=[('gresie', 'Gresie'), ('laminat', 'Laminat')], max_length=55, null=True)),
                ('attr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.residentialattr')),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialAttrFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(blank=True, upload_to='valuation/%Y/%m/%d')),
                ('attr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='dashboard.residentialattr')),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='PresentationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_identi', models.TextField(blank=True, max_length=1000, null=True)),
                ('sp_hypo', models.TextField(blank=True, max_length=1000, null=True)),
                ('poi', models.CharField(blank=True, max_length=1000, null=True)),
                ('pt', models.CharField(blank=True, max_length=155, null=True)),
                ('legal_doc', models.CharField(blank=True, max_length=1000, null=True)),
                ('cadastral_no', models.CharField(blank=True, max_length=155, null=True)),
                ('land_book_no', models.CharField(blank=True, max_length=155, null=True)),
                ('uat', models.CharField(blank=True, max_length=255, null=True)),
                ('charges', models.CharField(blank=True, choices=[('no', 'nu este grevata'), ('yes', 'este grevata')], max_length=155, null=True)),
                ('sarcini', models.CharField(blank=True, max_length=55, null=True)),
                ('current_use', models.CharField(blank=True, choices=[('locuita', 'Locuita'), ('libera', 'Libera'), ('inchiriata', 'Inchiriata')], max_length=155, null=True)),
                ('identification', models.CharField(blank=True, choices=[('id1', 'Identification 1'), ('id2', 'Identification 2'), ('id3', 'Identification 3')], max_length=155, null=True)),
                ('history', models.TextField(blank=True, max_length=1000, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refer_to', models.CharField(blank=True, max_length=55, null=True)),
                ('image_order', models.IntegerField(blank=True, null=True)),
                ('image', models.FileField(blank=True, upload_to='coverphoto/%Y/%m/%d')),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='CustomFieldValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_name', models.CharField(blank=True, max_length=155, null=True)),
                ('attr_value', models.CharField(blank=True, max_length=155, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='CustomFieldFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(blank=True, upload_to='valuation/%Y/%m/%d')),
                ('attr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cfiles', to='dashboard.customfieldvalue')),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='Construction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etaj', models.CharField(blank=True, max_length=55, null=True)),
                ('build_in', models.CharField(blank=True, max_length=10, null=True)),
                ('structure', models.CharField(blank=True, choices=[('rcf', 'Reinforced concrete frames')], max_length=255, null=True)),
                ('foundation', models.CharField(blank=True, choices=[('crcf', 'Continuous reinforced concrete foundations')], max_length=255, null=True)),
                ('closure', models.CharField(blank=True, choices=[('bm', 'Brick masonry')], max_length=255, null=True)),
                ('subcompartment', models.CharField(blank=True, choices=[('bm', 'Brick masonry')], max_length=255, null=True)),
                ('roof', models.CharField(blank=True, choices=[('ut', 'Uncirculable terrace')], max_length=255, null=True)),
                ('walls', models.CharField(blank=True, max_length=500, null=True)),
                ('interior_carpentry', models.CharField(blank=True, max_length=500, null=True)),
                ('ceiling', models.CharField(blank=True, max_length=500, null=True)),
                ('exterior_finishes', models.CharField(blank=True, max_length=500, null=True)),
                ('exterior_carpentry', models.CharField(blank=True, max_length=500, null=True)),
                ('utilities', models.CharField(blank=True, choices=[('gas', 'Natural gas'), ('electricity', 'Electricity'), ('apa', 'Apa'), ('sewerage', 'Sewerage')], max_length=500, null=True)),
                ('additional_equipment', models.CharField(blank=True, choices=[('ac', 'Air conditioning'), ('ngp', 'Conducta de gaze naturale'), ('mobilat', 'Mobilat')], max_length=500, null=True)),
                ('heating', models.CharField(blank=True, choices=[('calorifere', 'Calorifere'), ('ct', 'Conectate la termoficare'), ('ctp', 'Centrala termica proprie'), ('ctb', 'Centrala termica a blocului')], max_length=500, null=True)),
                ('finish', models.CharField(blank=True, choices=[('medii', 'Medii'), ('bune', 'Bune')], max_length=55, null=True)),
                ('comments', models.TextField(blank=True, max_length=1000, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='ComparableTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparables', models.CharField(blank=True, max_length=255, null=True)),
                ('mobila_ajustare', models.CharField(blank=True, max_length=255, null=True)),
                ('pb_ajustare', models.CharField(blank=True, max_length=255, null=True)),
                ('margin', models.CharField(blank=True, max_length=255, null=True)),
                ('motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('property_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('property_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('property_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('fc_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('fc_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('fc_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('sc_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('sc_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('sc_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('ape_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('ape_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('ape_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('me_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('me_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('me_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('lc_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('lc_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('lc_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('cp_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('cp_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('cp_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('cy_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('cy_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('cy_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('su_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('su_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('su_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('finish_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('finish_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('finish_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('etaj_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('etaj_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('etaj_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('price_persqm', models.CharField(blank=True, max_length=255, null=True)),
                ('balcon_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('balcon_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('balcon_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('hs_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('hs_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('hs_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('parking_percent', models.CharField(blank=True, max_length=255, null=True)),
                ('parking_euro', models.CharField(blank=True, max_length=255, null=True)),
                ('parking_motivation', models.CharField(blank=True, max_length=500, null=True)),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='ComparableProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_comparable', models.BooleanField(default=False)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mobila', models.CharField(blank=True, choices=[('nemobilat', 'Nemobilat'), ('partial', 'Partial mobilat'), ('complet', 'Complet mobilat')], max_length=55, null=True)),
                ('parking_boxa', models.CharField(blank=True, max_length=155, null=True)),
                ('available_data', models.CharField(blank=True, choices=[('oferta', 'Oferta'), ('tranzactie', 'Tranzactie')], max_length=55, null=True)),
                ('property_rights', models.CharField(blank=True, choices=[('deplin', 'Deplin'), ('partial', 'Partial')], max_length=55, null=True)),
                ('financing_condition', models.CharField(blank=True, choices=[('normale', 'Normale')], max_length=55, null=True)),
                ('sale_condition', models.CharField(blank=True, choices=[('independente', 'Independente')], max_length=55, null=True)),
                ('ape', models.CharField(blank=True, choices=[('da', 'Da'), ('nu', 'Nu')], max_length=55, null=True)),
                ('market_env', models.CharField(blank=True, max_length=55, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('compartment', models.CharField(blank=True, choices=[('decomandat', 'Decomandat'), ('semidecomandat', 'Semidecomandat'), ('nedecomandat', 'Neecomandat'), ('circular', 'Circular')], max_length=55, null=True)),
                ('year_build', models.CharField(blank=True, max_length=10, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('finish', models.CharField(blank=True, choices=[('medii', 'Medii'), ('bune', 'Bune')], max_length=55, null=True)),
                ('etaj', models.CharField(blank=True, max_length=55, null=True)),
                ('balcon', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_persqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('heating', models.CharField(blank=True, choices=[('calorifere', 'Calorifere'), ('ct', 'Conectate la termoficare'), ('ctp', 'Centrala termica proprie'), ('ctb', 'Centrala termica a blocului')], max_length=55, null=True)),
                ('parking', models.CharField(blank=True, max_length=55, null=True)),
                ('ref_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
        migrations.CreateModel(
            name='Anexa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refer_to', models.CharField(blank=True, choices=[('map', 'Hartalocalizare'), ('photography', 'Fotografii'), ('document', 'Documente')], max_length=55, null=True)),
                ('file_name', models.FileField(blank=True, upload_to='anexa/%Y/%m/%d')),
                ('ref_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.evaluareform')),
            ],
        ),
    ]
